{"ast":null,"code":"var _jsxFileName = \"/Users/igorzolotoverkh/Documents/GitHub/goit-react-hw-01-components/src/components/Statistics.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticticSection, StatTitle, StatUl, StatLi, StatPercentage } from './Statictic.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Statistics = ({\n  title,\n  stats\n}) => {\n  return /*#__PURE__*/_jsxDEV(StaticticSection, {\n    children: [title && /*#__PURE__*/_jsxDEV(StatTitle, {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(StatUl, {\n      children: stats.map(({\n        id,\n        label,\n        percentage\n      }) => /*#__PURE__*/_jsxDEV(StatLi, {\n        style: {\n          backgroundColor: getRandomColor()\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(StatPercentage, {\n          children: [percentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = Statistics;\nfunction getRandomColor() {\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\n}\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired\n  })).isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"names":["React","PropTypes","StaticticSection","StatTitle","StatUl","StatLi","StatPercentage","jsxDEV","_jsxDEV","Statistics","title","stats","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","label","percentage","style","backgroundColor","getRandomColor","_c","Math","floor","random","toString","propTypes","string","arrayOf","shape","isRequired","number","$RefreshReg$"],"sources":["/Users/igorzolotoverkh/Documents/GitHub/goit-react-hw-01-components/src/components/Statistics.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  StaticticSection,\n  StatTitle,\n  StatUl,\n  StatLi,\n  StatPercentage\n} from './Statictic.styled';\n\nexport const Statistics = ({ title, stats }) => {\n  return (\n    <StaticticSection>\n        {title && <StatTitle>{title}</StatTitle>}\n        <StatUl>\n          {stats.map(({ id, label, percentage }) => (\n            <StatLi key={id} style={{ backgroundColor: getRandomColor() }}>\n              <span>{label}</span>\n              <StatPercentage>{percentage}%</StatPercentage>\n            </StatLi>\n          ))}\n        </StatUl>\n    </StaticticSection>\n  );\n};\n\nfunction getRandomColor() {\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\n}\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAElC,SACEC,gBAAgB,EAChBC,SAAS,EACTC,MAAM,EACNC,MAAM,EACNC,cAAc,QACT,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,OAAO,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAM,CAAC,KAAK;EAC9C,oBACEH,OAAA,CAACN,gBAAgB;IAAAU,QAAA,GACZF,KAAK,iBAAIF,OAAA,CAACL,SAAS;MAAAS,QAAA,EAAEF;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACxCR,OAAA,CAACJ,MAAM;MAAAQ,QAAA,EACJD,KAAK,CAACM,GAAG,CAAC,CAAC;QAAEC,EAAE;QAAEC,KAAK;QAAEC;MAAW,CAAC,kBACnCZ,OAAA,CAACH,MAAM;QAAUgB,KAAK,EAAE;UAAEC,eAAe,EAAEC,cAAc,CAAC;QAAE,CAAE;QAAAX,QAAA,gBAC5DJ,OAAA;UAAAI,QAAA,EAAOO;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBR,OAAA,CAACF,cAAc;UAAAM,QAAA,GAAEQ,UAAU,EAAC,GAAC;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CAAC;MAAA,GAFnCE,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGP,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEvB,CAAC;AAACQ,EAAA,GAdWf,UAAU;AAgBvB,SAASc,cAAcA,CAAA,EAAG;EACxB,OAAO,GAAG,GAAGE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC;AAChE;AACAnB,UAAU,CAACoB,SAAS,GAAG;EACrBnB,KAAK,EAAET,SAAS,CAAC6B,MAAM;EACvBnB,KAAK,EAAEV,SAAS,CAAC8B,OAAO,CACtB9B,SAAS,CAAC+B,KAAK,CAAC;IACdd,EAAE,EAAEjB,SAAS,CAAC6B,MAAM,CAACG,UAAU;IAC/Bd,KAAK,EAAElB,SAAS,CAAC6B,MAAM,CAACG,UAAU;IAClCb,UAAU,EAAEnB,SAAS,CAACiC,MAAM,CAACD;EAC/B,CAAC,CACH,CAAC,CAACA;AACJ,CAAC;AAAC,IAAAT,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module"}